def unboundedKnapsack(k, arr):
    n = len(arr)
    dp = [0] * (k + 1)
    
    for i in range(n):
        for j in range(arr[i], k + 1):
            dp[j] = max(dp[j], dp[j - arr[i]] + arr[i])
    
    return dp[k]


if __name__ == "__main__":
    t = int(input().strip())  
    results = []
    for _ in range(t):
        n, k = map(int, input().strip().split())
        arr = list(map(int, input().strip().split()))
        results.append(unboundedKnapsack(k, arr))
    
    for result in results:
        print(result)
